stages:
  - .pre
  - test

docker-build:
  # Use the official docker image.
  image: docker:23.0.6
  stage: .pre
  tags:
    - autoscale
  services:
    - name: docker:23.0.6-dind
      alias: thedockerhost
  variables:
    DOCKER_HOST: tcp://thedockerhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
      - apk add --update make && apk add --update bash && apk add --update sudo && apk add --update git && apk add --update curl
      - make build-docker
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      exists:
        - Dockerfile
    - changes:
      - requirements.txt
      - Dockerfile
      - Makefile


# Job to build the development image
docker-build-dev:
  stage: test
  image: docker:23.0.6
  tags:
    - autoscale
  services:
    - name: docker:23.0.6-dind
      alias: thedockerhost
  variables:
    DOCKER_HOST: tcp://thedockerhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --target dev-stage -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

test:
  stage: test
  # Use the image built in the previous stage. This is the correct way.
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  before_script:
    - export KSM_CONFIG=$KSM_CONFIG
    - export SECRET_UID=$SECRET_KEY_UID
    - mkdir -p kmer
    - |
      ksm exec -- sh -c '
        S3_ACCESS_KEY=$(ksm secret get -u $SECRET_UID --field "Access Key")
        S3_SECRET_KEY=$(ksm secret get -u $SECRET_UID --field "Secret Key")
        cat > ~/.s3cfg <<EOF
        [default]
        access_key = $S3_ACCESS_KEY
        secret_key = $S3_SECRET_KEY
        host_base = $HOST_BASE
        host_bucket = $HOST_BUCKET
        use_https = True
        EOF
        s3cmd get s3://primer-designer/ci-cd-test-data/kmer-lists/homo_sapiens_11.list kmer/
        s3cmd get s3://primer-designer/ci-cd-test-data/kmer-lists/homo_sapiens_16.list kmer/
      '
    - ls kmer # Optional: for debugging
  script:
    - python -m unittest discover --start-directory ./tests --top-level-directory .
  dependencies:
    - docker-build-dev
  needs: [docker-build-dev]
